// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package server

import (
	"context"

	"TongChi_shop/rpc/internal/logic/goodsserve"
	"TongChi_shop/rpc/internal/svc"
	"TongChi_shop/rpc/shop"
)

type GoodsServeServer struct {
	svcCtx *svc.ServiceContext
	shop.UnimplementedGoodsServeServer
}

func NewGoodsServeServer(svcCtx *svc.ServiceContext) *GoodsServeServer {
	return &GoodsServeServer{
		svcCtx: svcCtx,
	}
}

// 获取商品列表
func (s *GoodsServeServer) GoodsList(ctx context.Context, in *shop.GoodsListReq) (*shop.GoodsListResp, error) {
	l := goodsservelogic.NewGoodsListLogic(ctx, s.svcCtx)
	return l.GoodsList(in)
}

// 添加商品
func (s *GoodsServeServer) GoodsAdd(ctx context.Context, in *shop.GoodsAddReq) (*shop.GoodsAddResp, error) {
	l := goodsservelogic.NewGoodsAddLogic(ctx, s.svcCtx)
	return l.GoodsAdd(in)
}

// 更新商品
func (s *GoodsServeServer) GoodsUpdate(ctx context.Context, in *shop.GoodsUpdateReq) (*shop.GoodsUpdateResp, error) {
	l := goodsservelogic.NewGoodsUpdateLogic(ctx, s.svcCtx)
	return l.GoodsUpdate(in)
}

// 删除商品
func (s *GoodsServeServer) GoodsDel(ctx context.Context, in *shop.GoodsDelReq) (*shop.GoodsDelResp, error) {
	l := goodsservelogic.NewGoodsDelLogic(ctx, s.svcCtx)
	return l.GoodsDel(in)
}

// 获取商品类型列表
func (s *GoodsServeServer) GoodsTypeList(ctx context.Context, in *shop.GoodsTypeListReq) (*shop.GoodsTypeListResp, error) {
	l := goodsservelogic.NewGoodsTypeListLogic(ctx, s.svcCtx)
	return l.GoodsTypeList(in)
}
