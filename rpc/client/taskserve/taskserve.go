// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package taskserve

import (
	"context"

	"TongChi_shop/rpc/shop"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddMerchantReq          = shop.AddMerchantReq
	AddMerchantResp         = shop.AddMerchantResp
	DelMerchantReq          = shop.DelMerchantReq
	DelMerchantResp         = shop.DelMerchantResp
	GoodsAddReq             = shop.GoodsAddReq
	GoodsAddResp            = shop.GoodsAddResp
	GoodsDelReq             = shop.GoodsDelReq
	GoodsDelResp            = shop.GoodsDelResp
	GoodsList               = shop.GoodsList
	GoodsListReq            = shop.GoodsListReq
	GoodsListResp           = shop.GoodsListResp
	GoodsTypeList           = shop.GoodsTypeList
	GoodsTypeListReq        = shop.GoodsTypeListReq
	GoodsTypeListResp       = shop.GoodsTypeListResp
	GoodsUpdateReq          = shop.GoodsUpdateReq
	GoodsUpdateResp         = shop.GoodsUpdateResp
	LoadImgReq              = shop.LoadImgReq
	LoadImgResp             = shop.LoadImgResp
	MerchantList            = shop.MerchantList
	MerchantListReq         = shop.MerchantListReq
	MerchantListResp        = shop.MerchantListResp
	OrderList               = shop.OrderList
	OrderListReq            = shop.OrderListReq
	OrderListResp           = shop.OrderListResp
	SendEmailAuthReq        = shop.SendEmailAuthReq
	SendEmailAuthResp       = shop.SendEmailAuthResp
	SpecificationReq        = shop.SpecificationReq
	SpecificationResp       = shop.SpecificationResp
	TaskList                = shop.TaskList
	TaskListReq             = shop.TaskListReq
	TaskListResp            = shop.TaskListResp
	TaskTypeList            = shop.TaskTypeList
	TaskTypeListReq         = shop.TaskTypeListReq
	TaskTypeListResp        = shop.TaskTypeListResp
	UpdateCourierNumberReq  = shop.UpdateCourierNumberReq
	UpdateCourierNumberResp = shop.UpdateCourierNumberResp
	UpdateMerchantReq       = shop.UpdateMerchantReq
	UpdateMerchantResp      = shop.UpdateMerchantResp
	UpdateTaskReq           = shop.UpdateTaskReq
	UpdateTaskResp          = shop.UpdateTaskResp
	UploadImgReq            = shop.UploadImgReq
	UploadImgResp           = shop.UploadImgResp
	UserLoginReq            = shop.UserLoginReq
	UserLoginResp           = shop.UserLoginResp

	TaskServe interface {
		// 获取任务列表
		TaskList(ctx context.Context, in *TaskListReq, opts ...grpc.CallOption) (*TaskListResp, error)
		// 更新任务信息
		UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error)
		// 获取任务类型列表
		TaskTypeList(ctx context.Context, in *TaskTypeListReq, opts ...grpc.CallOption) (*TaskTypeListResp, error)
	}

	defaultTaskServe struct {
		cli zrpc.Client
	}
)

func NewTaskServe(cli zrpc.Client) TaskServe {
	return &defaultTaskServe{
		cli: cli,
	}
}

// 获取任务列表
func (m *defaultTaskServe) TaskList(ctx context.Context, in *TaskListReq, opts ...grpc.CallOption) (*TaskListResp, error) {
	client := shop.NewTaskServeClient(m.cli.Conn())
	return client.TaskList(ctx, in, opts...)
}

// 更新任务信息
func (m *defaultTaskServe) UpdateTask(ctx context.Context, in *UpdateTaskReq, opts ...grpc.CallOption) (*UpdateTaskResp, error) {
	client := shop.NewTaskServeClient(m.cli.Conn())
	return client.UpdateTask(ctx, in, opts...)
}

// 获取任务类型列表
func (m *defaultTaskServe) TaskTypeList(ctx context.Context, in *TaskTypeListReq, opts ...grpc.CallOption) (*TaskTypeListResp, error) {
	client := shop.NewTaskServeClient(m.cli.Conn())
	return client.TaskTypeList(ctx, in, opts...)
}
