// Code generated by goctl. DO NOT EDIT.
// Source: shop.proto

package userserve

import (
	"context"

	"TongChi_shop/rpc/shop"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GoodsAddReq       = shop.GoodsAddReq
	GoodsAddResp      = shop.GoodsAddResp
	GoodsDelReq       = shop.GoodsDelReq
	GoodsDelResp      = shop.GoodsDelResp
	GoodsList         = shop.GoodsList
	GoodsListReq      = shop.GoodsListReq
	GoodsListResp     = shop.GoodsListResp
	GoodsUpdateReq    = shop.GoodsUpdateReq
	GoodsUpdateResp   = shop.GoodsUpdateResp
	SendEmailAuthReq  = shop.SendEmailAuthReq
	SendEmailAuthResp = shop.SendEmailAuthResp
	SpecificationReq  = shop.SpecificationReq
	SpecificationResp = shop.SpecificationResp
	UserLoginReq      = shop.UserLoginReq
	UserLoginResp     = shop.UserLoginResp

	UserServe interface {
		UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error)
	}

	defaultUserServe struct {
		cli zrpc.Client
	}
)

func NewUserServe(cli zrpc.Client) UserServe {
	return &defaultUserServe{
		cli: cli,
	}
}

func (m *defaultUserServe) UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := shop.NewUserServeClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}
